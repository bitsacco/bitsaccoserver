{
  "realm": "bitsaccoserver-dev",
  "displayName": "Bitsaccoserver Development",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>Bitsaccoserver Development</span></div>",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "rememberMe": true,
  "verifyEmail": false,
  "loginTheme": "keycloak",
  "accountTheme": "keycloak",
  "adminTheme": "keycloak",
  "emailTheme": "keycloak",
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "clients": [
    {
      "clientId": "bitsaccoserver",
      "name": "Bitsaccoserver Service",
      "description": "Main client for Bitsaccoserver Service API",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "bitsaccoserver-secret-dev",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "org_roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "org_roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "bitsaccoserver-admin",
        "description": "Full access to console management",
        "composite": false
      },
      {
        "name": "bitsaccoserver-developer",
        "description": "Developer access - can manage API keys and view usage",
        "composite": false
      },
      {
        "name": "bitsaccoserver-member",
        "description": "Basic bitsaccoserver member",
        "composite": false
      }
    ]
  },
  "users": [
    {
      "username": "admin@bitsaccoserver.org",
      "email": "admin@bitsaccoserver.org",
      "firstName": "Admin",
      "lastName": "User",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "admin123",
          "temporary": false
        }
      ],
      "realmRoles": ["bitsaccoserver-admin", "bitsaccoserver-member"],
      "attributes": {
        "organization": ["bitsaccoserver-demo"]
      }
    },
    {
      "username": "developer@bitsaccoserver.org",
      "email": "developer@bitsaccoserver.org",
      "firstName": "Dev",
      "lastName": "User",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "dev123",
          "temporary": false
        }
      ],
      "realmRoles": ["bitsaccoserver-developer", "bitsaccoserver-member"],
      "attributes": {
        "organization": ["bitsaccoserver-demo"]
      }
    },
    {
      "username": "member@bitsaccoserver.org",
      "email": "member@bitsaccoserver.org",
      "firstName": "Test",
      "lastName": "User",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "member123",
          "temporary": false
        }
      ],
      "realmRoles": ["bitsaccoserver-member"],
      "attributes": {
        "organization": ["bitsaccoserver-demo"]
      }
    },
    {
      "username": "service-account-bitsaccoserver",
      "enabled": true,
      "serviceAccountClientId": "bitsaccoserver",
      "clientRoles": {
        "realm-management": ["manage-users", "create-client", "manage-clients", "view-users", "view-clients"]
      }
    }
  ],
  "groups": [
    {
      "name": "bitsaccoserver-demo",
      "path": "/bitsaccoserver-demo",
      "attributes": {
        "organization_id": ["org-bitsaccoserver-demo-001"]
      },
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": [
        {
          "name": "admins",
          "path": "/bitsaccoserver-demo/admins",
          "realmRoles": ["bitsaccoserver-admin"]
        },
        {
          "name": "developers", 
          "path": "/bitsaccoserver-demo/developers",
          "realmRoles": ["bitsaccoserver-developer"]
        }
      ]
    }
  ],
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.storage.UserStorageProvider": [],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "defaultLocale": "",
  "authenticationFlows": [],
  "authenticatorConfig": [],
  "requiredActions": [],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "cibaAuthRequestedUserHint": "login_hint",
    "parRequestUriLifespan": "60",
    "frontendUrl": "",
    "consoleDisplayName": "Bitsaccoserver Development Console"
  },
  "keycloakVersion": "23.0.0"
}