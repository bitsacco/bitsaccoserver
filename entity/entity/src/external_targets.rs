//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use super::sea_orm_active_enums::ExternalTargetType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "external_targets")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub target_type: ExternalTargetType,
    pub identifier: String,
    pub display_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub lnurl_endpoint: Option<String>,
    pub min_sendable_msat: Option<i64>,
    pub max_sendable_msat: Option<i64>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub metadata: Option<Json>,
    pub is_active: bool,
    pub last_verified_at: Option<DateTimeWithTimeZone>,
    pub expires_at: Option<DateTimeWithTimeZone>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    pub created_by: Option<Uuid>,
    pub updated_by: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::lnurl_transactions::Entity")]
    LnurlTransactions,
}

impl Related<super::lnurl_transactions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LnurlTransactions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
