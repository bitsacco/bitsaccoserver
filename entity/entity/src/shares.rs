//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use super::sea_orm_active_enums::OwnerType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "shares")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub owner_id: Uuid,
    pub owner_type: OwnerType,
    pub share_offer_id: Uuid,
    #[sea_orm(column_type = "Decimal(Some((15, 2)))")]
    pub share_quantity: Decimal,
    #[sea_orm(column_type = "Decimal(Some((15, 2)))")]
    pub share_value: Decimal,
    #[sea_orm(column_type = "Decimal(Some((15, 2)))")]
    pub total_value: Decimal,
    pub last_transaction_at: Option<DateTimeWithTimeZone>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    pub created_by: Option<Uuid>,
    pub updated_by: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::share_offers::Entity",
        from = "Column::ShareOfferId",
        to = "super::share_offers::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ShareOffers,
}

impl Related<super::share_offers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ShareOffers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
