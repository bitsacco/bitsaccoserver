//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use super::sea_orm_active_enums::LnurlTransactionStatus;
use super::sea_orm_active_enums::LnurlTransactionType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "lnurl_transactions")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub wallet_transaction_id: Option<Uuid>,
    pub lightning_address_id: Option<Uuid>,
    pub external_target_id: Option<Uuid>,
    pub transaction_type: LnurlTransactionType,
    pub status: LnurlTransactionStatus,
    pub lnurl_string: Option<String>,
    pub k1: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub invoice: Option<String>,
    pub payment_hash: Option<String>,
    pub preimage: Option<String>,
    pub amount_msat: Option<i64>,
    #[sea_orm(column_type = "Text", nullable)]
    pub comment: Option<String>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub success_action: Option<Json>,
    pub callback_url: Option<String>,
    pub tag: Option<String>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub metadata: Option<Json>,
    #[sea_orm(column_type = "Text", nullable)]
    pub error_details: Option<String>,
    pub processed_at: Option<DateTimeWithTimeZone>,
    pub expires_at: Option<DateTimeWithTimeZone>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    pub created_by: Option<Uuid>,
    pub updated_by: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::external_targets::Entity",
        from = "Column::ExternalTargetId",
        to = "super::external_targets::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    ExternalTargets,
    #[sea_orm(
        belongs_to = "super::lightning_addresses::Entity",
        from = "Column::LightningAddressId",
        to = "super::lightning_addresses::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    LightningAddresses,
    #[sea_orm(
        belongs_to = "super::wallet_transactions::Entity",
        from = "Column::WalletTransactionId",
        to = "super::wallet_transactions::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    WalletTransactions,
}

impl Related<super::external_targets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ExternalTargets.def()
    }
}

impl Related<super::lightning_addresses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LightningAddresses.def()
    }
}

impl Related<super::wallet_transactions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WalletTransactions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
